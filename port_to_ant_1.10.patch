--- eclipse.platform/ant/org.eclipse.ant.core/src_ant/org/eclipse/ant/internal/core/ant/InternalAntRunner.java.orig	2017-01-04 10:48:22.000000000 +0000
+++ eclipse.platform/ant/org.eclipse.ant.core/src_ant/org/eclipse/ant/internal/core/ant/InternalAntRunner.java	2017-01-09 11:57:43.930455256 +0000
@@ -19,6 +19,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PrintStream;
+import java.lang.reflect.Field;
+import java.lang.reflect.Modifier;
 import java.net.URL;
 import java.text.MessageFormat;
 import java.util.ArrayList;
@@ -1481,7 +1483,16 @@
 		}
 
 		org.apache.tools.ant.types.Path systemClasspath = new org.apache.tools.ant.types.Path(null, buff.substring(0, buff.length() - 2));
-		org.apache.tools.ant.types.Path.systemClasspath = systemClasspath;
+		try {
+			Field field = org.apache.tools.ant.types.Path.class.getDeclaredField("systemClasspath"); //$NON-NLS-1$
+			Field modifiersField = Field.class.getDeclaredField("modifiers"); //$NON-NLS-1$
+			modifiersField.setAccessible(true);
+			modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);
+			field.set(field, systemClasspath);
+		}
+		catch (NoSuchFieldException | IllegalArgumentException | IllegalAccessException | SecurityException e) {
+			e.printStackTrace();
+		}
 	}
 
 	/**
--- "eclipse.platform/ant/org.eclipse.ant.ui/Ant Tools Support/org/eclipse/ant/internal/ui/model/AntDefiningTaskNode.java.orig"	2017-01-09 10:40:37.663084636 +0000
+++ "eclipse.platform/ant/org.eclipse.ant.ui/Ant Tools Support/org/eclipse/ant/internal/ui/model/AntDefiningTaskNode.java"	2017-01-09 10:41:11.452722811 +0000
@@ -14,6 +14,8 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.lang.reflect.Field;
+import java.lang.reflect.Modifier;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
@@ -175,7 +177,16 @@
 		}
 
 		org.apache.tools.ant.types.Path systemClasspath = new org.apache.tools.ant.types.Path(null, buff.substring(0, buff.length() - 2));
-		org.apache.tools.ant.types.Path.systemClasspath = systemClasspath;
+		try {
+			Field field = org.apache.tools.ant.types.Path.class.getDeclaredField("systemClasspath"); //$NON-NLS-1$
+			Field modifiersField = Field.class.getDeclaredField("modifiers"); //$NON-NLS-1$
+			modifiersField.setAccessible(true);
+			modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);
+			field.set(field, systemClasspath);
+		}
+		catch (NoSuchFieldException | IllegalArgumentException | IllegalAccessException | SecurityException e) {
+			e.printStackTrace();
+		}
 	}
 
 	@Override
--- eclipse.platform/ant/org.eclipse.ant.launching/build.properties.orig	2017-01-09 10:24:16.258243377 +0000
+++ eclipse.platform/ant/org.eclipse.ant.launching/build.properties	2017-01-09 10:25:08.302620557 +0000
@@ -20,18 +20,14 @@
                about.html
 
 jars.compile.order = .,\
-				lib/loggers.jar
-# antdebug.jar and remote.jar are compiled locally using 1.6, see bug 495617:
-#				     lib/antdebug.jar,\
-#                     lib/remote.jar
+				     lib/antdebug.jar,\
+                     lib/loggers.jar,\
+                     lib/remote.jar
 source.lib/loggers.jar = loggers/
 output.lib/loggers.jar = loggers_bin/
-extra.lib/loggers.jar = lib/antdebug.jar
-#source.lib/antdebug.jar = common/
-#output.lib/antdebug.jar = common_bin/
-#source.lib/remote.jar = remote/
-#output.lib/remote.jar = remote_bin/
-src.includes = about.html,\
-               remote/,\
-               common/
+source.lib/antdebug.jar = common/
+output.lib/antdebug.jar = common_bin/
+source.lib/remote.jar = remote/
+output.lib/remote.jar = remote_bin/
+src.includes = about.html
 javacWarnings..=-unavoidableGenericProblems
--- eclipse.pde.build/org.eclipse.pde.build.tests/src/org/eclipse/pde/build/internal/tests/ant/AntUtils.java.orig	2017-01-09 10:47:27.168692489 +0000
+++ eclipse.pde.build/org.eclipse.pde.build.tests/src/org/eclipse/pde/build/internal/tests/ant/AntUtils.java	2017-01-09 10:47:36.735589854 +0000
@@ -115,6 +115,5 @@
 		}
 
 		org.apache.tools.ant.types.Path systemClasspath = new org.apache.tools.ant.types.Path(null, buff.substring(0, buff.length() - 2));
-		org.apache.tools.ant.types.Path.systemClasspath = systemClasspath;
 	}
 }
--- eclipse.platform.common/bundles/org.eclipse.jdt.doc.user/build.xml.orig	2017-01-09 13:30:24.238066571 +0000
+++ eclipse.platform.common/bundles/org.eclipse.jdt.doc.user/build.xml	2017-01-09 13:31:19.228456113 +0000
@@ -1,106 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project name="org.eclipse.jdt.doc.user" default="build.jars" basedir=".">
+<project name="org.eclipse.jdt.doc.user" default="build.index" basedir=".">
 
-	<property name="version.suffix" value="3.3.0" />
-	<property name="full.name" value="org.eclipse.jdt.doc.user_${version.suffix}" />
-	<property name="bootclasspath" value="" />
-	<property name="basews" value="${ws}" />
-	<property name="baseos" value="${os}" />
-	<property name="basearch" value="${arch}" />
-	<property name="basenl" value="${nl}" />
-	<property name="javacFailOnError" value="false" />
-	<property name="javacDebugInfo" value="on" />
-	<property name="javacVerbose" value="true" />
-	<property name="javacSource" value="1.3" />
-	<property name="javacTarget" value="1.1" />
-
-	<target name="init" depends="properties">
-		<property name="temp.folder" value="${basedir}/temp.folder" />
-		<property name="plugin.destination" value="${basedir}" />
-		<property name="build.result.folder" value="${basedir}" />
-		<available file="${basedir}/doc.zip" property="doc.zip.present" />
-		<condition property="p2.publish.parts" value="true">
-			<istrue value="${p2.gathering}" />
-		</condition>
-	</target>
-
-	<target name="properties" if="eclipse.running">
-		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
-	</target>
-
-	<target name="build.update.jar" depends="init" description="Build the plug-in: org.eclipse.jdt.doc.user for an update site.">
-		<delete dir="${temp.folder}" />
-		<mkdir dir="${temp.folder}" />
-		<antcall target="build.jars" />
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/" />
-		</antcall>
-		<zip zipfile="${plugin.destination}/${full.name}.jar" basedir="${temp.folder}/${full.name}" filesonly="false" whenempty="skip" />
-		<delete dir="${temp.folder}" />
-	</target>
-
-	<target name="publish.bin.parts" depends="init" if="p2.publish.parts">
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${build.result.folder}" />
-		</antcall>
-		<eclipse.gatherBundle metadataRepository="${p2.build.repo}" artifactRepository="${p2.build.repo}" buildResultFolder="${build.result.folder}" targetFolder="${build.result.folder}/${full.name}" />
-	</target>
-
-	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
-		<antcall target="build.index" />
-		<mkdir dir="${destination.temp.folder}/${full.name}" />
-		<copy todir="${destination.temp.folder}/${full.name}">
-			<fileset dir="${basedir}" includes="*.properties,*.xml,*.zip,*.html,*.htm,*.png,*.css,META-INF/**,index/**,concepts/**, gettingStarted/**, images/**, reference/**, tasks/**, tips/**, whatsNew/**" excludes="build.properties,build.xml" />
-		</copy>
-		<eclipse.versionReplacer path="${destination.temp.folder}/${full.name}" version="${version.suffix}" />
-	</target>
-
-	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.eclipse.jdt.doc.user.">
-	</target>
-
-	<target name="build.index" depends="init" description="Builds search index for the plug-in: org.eclipse.jdt.doc.user." if="eclipse.running">
+	<target name="build.index" description="Builds search index for the plug-in: org.eclipse.jdt.doc.user." if="eclipse.running">
 		<help.buildHelpIndex manifest="plugin.xml" destination="." />
 	</target>
 
-	<target name="build.sources" depends="init">
-	</target>
-
-	<target name="build.zips" depends="init">
-	</target>
-
-	<target name="gather.sources" depends="init" if="destination.temp.folder">
-	</target>
-
-	<target name="gather.logs" depends="init" if="destination.temp.folder">
-	</target>
-
-	<target name="clean" depends="init" description="Clean the plug-in: org.eclipse.jdt.doc.user of all the zips, jars and logs created.">
-		<delete file="${plugin.destination}/${full.name}.jar" />
-		<delete file="${plugin.destination}/${full.name}.zip" />
-		<delete dir="${temp.folder}" />
-	</target>
-
-	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
-		<eclipse.convertPath fileSystemPath="D:/30workspace/org.eclipse.jdt.doc.user/" property="resourcePath" />
-		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite" />
-	</target>
-
-	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.eclipse.jdt.doc.user." if="eclipse.running">
-		<delete dir="${temp.folder}" />
-		<mkdir dir="${temp.folder}" />
-		<antcall target="build.jars" />
-		<antcall target="build.sources" />
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/" />
-		</antcall>
-		<antcall target="gather.sources">
-			<param name="destination.temp.folder" value="${temp.folder}/" />
-		</antcall>
-		<delete>
-			<fileset dir="${temp.folder}" includes="**/*.bin.log" />
-		</delete>
-		<zip zipfile="${plugin.destination}/${full.name}.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" />
-		<delete dir="${temp.folder}" />
-	</target>
-
 </project>
